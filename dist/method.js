// Generated by CoffeeScript 1.10.0
(function() {
  var Block, Method, setting;

  Block = require('./core');

  setting = require('./setting');

  Method = function(exec, name, self) {
    this._exec = exec;
    this._name = name;
    this._self = self;
    this._before = false;
    this._after = false;
    this.before = function(event) {
      var _obj;
      _obj = new Block(typeof event === 'object' ? event : this._self);
      if (typeof event === 'function') {
        _obj = setting(_obj, this._self);
        _obj[this._name]._before = true;
        _obj[this._name]._after = this._self[this._name]._after;
        _obj[this._name].before = event;
        _obj[this._name].after = this._self[this._name].after;
      }
      return _obj;
    };
    this.after = function(event) {
      var _obj;
      _obj = new Block(typeof event === 'object' ? event : this._self);
      if (typeof event === 'function') {
        _obj = setting(_obj, this._self);
        _obj[this._name]._before = this._self[this._name]._before;
        _obj[this._name]._after = true;
        _obj[this._name].before = this._self[this._name].before;
        _obj[this._name].after = event;
      }
      return _obj;
    };
    return this;
  };

  Method.prototype = {
    query: function() {
      return this._exec.apply(this, arguments);
    }
  };

  module.exports = Method;

}).call(this);
